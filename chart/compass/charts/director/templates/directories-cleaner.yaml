apiVersion: batch/v1
kind: Job
metadata:
  name: director-directories-cleaner
  namespace: compass-system
spec:
  template:
    spec:
      restartPolicy: Never
      shareProcessNamespace: true
      containers:
        - name: cleaner
          image: eu.gcr.io/kyma-project/incubator/compass-director:PR-2171
          imagePullPolicy: IfNotPresent
          env:
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-username
            - name: APP_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-password
            - name: APP_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-serviceName
            - name: APP_DB_PORT
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-servicePort
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-director-db-name
            - name: APP_DB_SSL
              valueFrom:
                secretKeyRef:
                  name: compass-postgresql
                  key: postgresql-sslMode
            - name: APP_DB_MAX_OPEN_CONNECTIONS
              value: "3"
            - name: APP_DB_MAX_IDLE_CONNECTIONS
              value: "1"
            - name: APP_LOG_FORMAT
              value: "kibana"
            - name: APP_CONTEXT_ENRICHMENT_ENDPOINT
              value: "https://provisioning-service.cfapps.stagingaws.hanavlab.ondemand.com/provisioning/v2/subaccountContext/subaccount"
            - name: APP_REQUEST_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cis-subaccounts-enrichment
                  key: token
          command:
            - "/bin/sh"
          args:
            - "-c"
            - "./directorycleaner; exit_code=$?; sleep 5; echo '# KILLING PILOT-AGENT #'; pkill -INT cloud_sql_proxy; curl -XPOST http://127.0.0.1:15020/quitquitquit; sleep 5; exit $exit_code;"
      {{/*        - name: cloudsql-proxy*/}}
      {{/*          image: gcr.io/cloudsql-docker/gce-proxy:1.23.0-alpine*/}}
      {{/*          command:*/}}
      {{/*            - /bin/sh*/}}
      {{/*          args:*/}}
      {{/*            - -c*/}}
      {{/*            - "trap 'exit 0' SIGINT; echo 'Waiting for istio-proxy to start...' && sleep 15; /cloud_sql_proxy -instances={{ .Values.global.database.managedGCP.instanceConnectionName }}=tcp:5432 -credential_file=/secrets/cloudsql-instance-credentials/credentials.json -term_timeout=2s"*/}}
      {{/*          volumeMounts:*/}}
      {{/*            - name: cloudsql-instance-credentials*/}}
      {{/*              mountPath: /secrets/cloudsql-instance-credentials*/}}
      {{/*              readOnly: true*/}}
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
